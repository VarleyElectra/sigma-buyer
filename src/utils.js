function containsPrelaunch(text) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ 'prelaunch' –∏–ª–∏ 'Prelaunch'
  const pattern = /prelaunch/i;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  return pattern.test(text);
}

function extractSignal(text) {
  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–¥—Ä–µ—Å–æ–≤ Solana (44 —Å–∏–º–≤–æ–ª–∞, Base58)
  const solanaAddressPattern = /\b[1-9A-HJ-NP-Za-km-z]{32,44}\b/g;

  const isPrelaunch = containsPrelaunch(text);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
  const addresses = text.match(solanaAddressPattern);

  if (addresses && !isPrelaunch) {
    return addresses[0];
  }

  return '';
}

// const text = 'Prelaunch (üî•ETH) Russian Pepe\n' +
//   'Gambles Channelüé≤\n' +
//   '\n' +
//   'Enter at your own risk! Wait for Lock/Renounce and always do your own research. Disclaimer (https://t.me/mad_apes_gambles/201)\n' +
//   '\n' +
//   '"Meet –ü–ï–ü–ï, the frog with a Russian twist ‚Äì bold, funny, and tougher than Siberian winter. Dressed in an ushanka, sipping questionable tea, and always ready with a balalaika solo, –ü–ï–ü–ï is here to dominate the meme coin game like a true Slavic legend."\n' +
//   '\n' +
//   'Launches 6PM UTC\n' +
//   'Telegram (https://t.me/RussianPepe_ETH) - Twitter (https://x.com/RussianPepe_ETH) - Website (https://www.russianpepe.com/)\n' +
//   '\n' +
//   'eL5fUxj2J4CiQsmW85k5FG9DvuQjjUoBHoQBi2Kpump'
// console.log('findSolanaAddresses', extractSignal(text));
// const regex = /\b[1-9A-HJ-NP-Za-km-z]{32,44}\b/g;
// const addresses = text.match(regex);
// console.log('addresses', addresses)


module.exports = { findSolanaAddresses: extractSignal };
